import "strings"
import "types"

outputs = {}

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"google_secret_manager_secret": {
				"secret-basic": {
					0: {
						"attr": {
							"create_time": "2021-10-06T08:43:43.022390Z",
							"expire_time": "",
							"id":          "projects/manifest-access-320809/secrets/secret-wf-google-tf",
							"labels": {
								"label": "my-label2",
							},
							"name":    "projects/360087009916/secrets/secret-wf-google-tf",
							"project": "manifest-access-320809",
							"replication": [
								{
									"automatic": false,
									"user_managed": [
										{
											"replicas": [
												{
													"customer_managed_encryption": [],
													"location":                    "us-central1",
												},
												{
													"customer_managed_encryption": [],
													"location":                    "europe-west1",
												},
											],
										},
									],
								},
							],
							"rotation":  [],
							"secret_id": "secret-wf-google-tf",
							"timeouts":  null,
							"topics":    [],
							"ttl":       null,
						},
						"depends_on": [],
						"id":         "projects/manifest-access-320809/secrets/secret-wf-google-tf",
						"tainted":    false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.0.8"

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
